<?xml version="1.0" encoding="UTF-8"?>

<project name="PHPUnit" default="build">
 <property name="php" value="php"/>

 <target name="build"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit,phpcb"/>

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

 <target name="tools-parallel"
         description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/bin"/>
  <delete dir="${basedir}/vendor"/>
  <delete file="${basedir}/composer.lock"/>
  <delete file="${basedir}/composer.phar"/>
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
  <delete dir="${basedir}/build/phar"/>

  <delete>
   <fileset dir="${basedir}/build">
    <include name="**/*.phar" />
   </fileset>
  </delete>
 </target>

 <target name="prepare" depends="clean,phpab"
         description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
 </target>

 <target name="phpab" description="Generate autoloader scripts">
  <exec executable="phpab">
   <arg value="--output" />
   <arg path="PHPUnit/Autoload.php" />
   <arg value="--template" />
   <arg path="PHPUnit/Autoload.php.in" />
   <arg value="--indent" />
   <arg value="            " />
   <arg path="PHPUnit" />
  </exec>

  <exec executable="phpab">
   <arg value="--output" />
   <arg path="Tests/autoload.php" />
   <arg path="Tests" />
  </exec>
 </target>

 <target name="lint">
  <apply executable="${php}" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/PHPUnit">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/Tests">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}/PHPUnit" />
  </exec>
 </target>

 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/PHPUnit" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD">
  <exec executable="phpmd">
   <arg path="${basedir}/PHPUnit" />
   <arg value="text" />
   <arg value="${basedir}/build/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci"
         description="Perform project mess detection using PHPMD">
  <exec executable="phpmd">
   <arg path="${basedir}/PHPUnit" />
   <arg value="xml" />
   <arg value="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer">
  <exec executable="phpcs">
   <arg value="--standard=${basedir}/build/PHPCS" />
   <arg value="--extensions=php" />
   <arg value="--ignore=Autoload.php" />
   <arg path="${basedir}/PHPUnit" />
   <arg path="${basedir}/Tests" />
  </exec>
 </target>

 <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=${basedir}/build/PHPCS" />
   <arg value="--extensions=php" />
   <arg value="--ignore=Autoload.php" />
   <arg path="${basedir}/PHPUnit" />
   <arg path="${basedir}/Tests" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/PHPUnit" />
  </exec>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="${php}" failonerror="true">
   <arg path="${basedir}/phpunit.php" />
  </exec>
 </target>

 <target name="phpcb"
         description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--source" />
   <arg path="${basedir}/PHPUnit" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser" />
  </exec>
 </target>

 <target name="phar"
         description="Create PHAR archive of PHPUnit and all its dependencies"
         depends="phar-prepare,phar-build">
 </target>

 <target name="phar-prepare" depends="clean">
  <mkdir dir="${basedir}/build/phar"/>

  <get src="https://getcomposer.org/composer.phar" dest="${basedir}/composer.phar"/>

  <exec executable="php">
   <arg value="composer.phar"/>
   <arg value="install"/>
  </exec>

  <copy file="${basedir}/composer.json" tofile="${basedir}/composer.json.bak"/>

  <exec executable="php">
   <arg value="composer.phar"/>
   <arg value="require"/>
   <arg value="phpunit/dbunit"/>
   <arg value="1.2.*"/>
  </exec>

  <exec executable="php">
   <arg value="composer.phar"/>
   <arg value="require"/>
   <arg value="phpunit/phpunit-selenium"/>
   <arg value="1.3.*"/>
  </exec>

  <exec executable="php">
   <arg value="composer.phar"/>
   <arg value="require"/>
   <arg value="phpunit/php-invoker"/>
   <arg value="1.1.*"/>
  </exec>

  <move file="${basedir}/composer.json.bak" tofile="${basedir}/composer.json"/>

  <copy todir="${basedir}/build/phar/php-code-coverage">
   <fileset dir="${basedir}/vendor/phpunit/php-code-coverage/PHP">
    <include name="**/*" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar" file="${basedir}/build/ca.pem" />

  <copy todir="${basedir}/build/phar/php-file-iterator">
   <fileset dir="${basedir}/vendor/phpunit/php-file-iterator/File">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/php-text-template">
   <fileset dir="${basedir}/vendor/phpunit/php-text-template/Text">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/php-timer">
   <fileset dir="${basedir}/vendor/phpunit/php-timer/PHP">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/php-token-stream">
   <fileset dir="${basedir}/vendor/phpunit/php-token-stream/PHP">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/phpunit-mock-objects">
   <fileset dir="${basedir}/vendor/phpunit/phpunit-mock-objects/PHPUnit">
    <include name="**/*" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/sebastian-diff">
   <fileset dir="${basedir}/vendor/sebastian/diff/src">
    <include name="**/*.php" />
    <exclude name="**/autoload.php" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/sebastian-exporter">
   <fileset dir="${basedir}/vendor/sebastian/exporter/src">
    <include name="**/*.php" />
    <exclude name="**/autoload.php" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/sebastian-version">
   <fileset dir="${basedir}/vendor/sebastian/version/src">
    <include name="**/*.php" />
    <exclude name="**/autoload.php" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/symfony">
   <fileset dir="${basedir}/vendor/symfony">
    <include name="**/*.php" />
    <exclude name="**/Tests/**" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/pear">
   <fileset dir="${basedir}/vendor/pear-pear.php.net">
    <include name="**/*.php" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/dbunit">
   <fileset dir="${basedir}/vendor/phpunit/dbunit/PHPUnit">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/php-invoker">
   <fileset dir="${basedir}/vendor/phpunit/php-invoker/PHP">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <copy todir="${basedir}/build/phar/phpunit-selenium">
   <fileset dir="${basedir}/vendor/phpunit/phpunit-selenium/PHPUnit">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>
 </target>

 <target name="phar-build">
  <exec executable="bash" outputproperty="version">
   <arg value="-c" />
   <arg value="${basedir}/phpunit.php --version | awk 'BEGIN { ORS = &quot;&quot;; } {print $2}'" />
  </exec>

  <copy todir="${basedir}/build/phar/phpunit">
   <fileset dir="${basedir}/PHPUnit">
    <include name="**/*.php" />
    <exclude name="**/Autoload.*" />
   </fileset>
  </copy>

  <exec executable="phpab">
   <arg value="--all" />
   <arg value="--phar" />
   <arg value="--output" />
   <arg path="${basedir}/build/phpunit-${version}.phar" />
   <arg value="--template" />
   <arg path="${basedir}/build/phar-autoload.php.in" />
   <arg value="--indent" />
   <arg value="            " />
   <arg path="${basedir}/build/phar" />
  </exec>

  <chmod file="${basedir}/build/phpunit-${version}.phar" perm="ugo+rx"/>
 </target>
</project>
