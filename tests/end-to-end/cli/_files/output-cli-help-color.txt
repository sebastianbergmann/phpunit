[33mUsage:[0m
  phpunit [options] UnitTest.php
  phpunit [options] <directory>

[33mCode Coverage Options:[0m
  [32m--coverage-clover [36m<file>[0m   [0m Generate code coverage report in Clover
                              XML format
  [32m--coverage-crap4j [36m<file>[0m   [0m Generate code coverage report in Crap4J
                              XML format
  [32m--coverage-html [36m<dir>[0m      [0m Generate code coverage report in HTML
                              format
  [32m--coverage-php [36m<file>[0m      [0m Export PHP_CodeCoverage object to file
  [32m--coverage-text=[36m<file>[0m     [0m Generate code coverage report in text
                              format [default: standard output]
  [32m--coverage-xml [36m<dir>[0m       [0m Generate code coverage report in PHPUnit
                              XML format
  [32m--whitelist [36m<dir>[0m          [0m Whitelist <dir> for code coverage
                              analysis
  [32m--disable-coverage-ignore  [0m Disable annotations for ignoring code
                              coverage
  [32m--no-coverage              [0m Ignore code coverage configuration
  [32m--dump-xdebug-filter [36m<file>[0m[0m Generate script to set Xdebug code
                              coverage filter

[33mLogging Options:[0m
  [32m--log-junit [36m<file>[0m         [0m Log test execution in JUnit XML format to
                              file
  [32m--log-teamcity [36m<file>[0m      [0m Log test execution in TeamCity format to
                              file
  [32m--testdox-html [36m<file>[0m      [0m Write agile documentation in HTML format
                              to file
  [32m--testdox-text [36m<file>[0m      [0m Write agile documentation in Text format
                              to file
  [32m--testdox-xml [36m<file>[0m       [0m Write agile documentation in XML format
                              to file
  [32m--reverse-list             [0m Print defects in reverse order

[33mTest Selection Options:[0m
  [32m--filter [36m<pattern>[0m         [0m Filter which tests to run
  [32m--testsuite [36m<name>[0m         [0m Filter which testsuite to run
  [32m--group [36m<name>[0m             [0m Only runs tests from the specified
                              group(s)
  [32m--exclude-group [36m<name>[0m     [0m Exclude tests from the specified group(s)
  [32m--list-groups              [0m List available test groups
  [32m--list-suites              [0m List available test suites
  [32m--list-tests               [0m List available tests
  [32m--list-tests-xml [36m<file>[0m    [0m List available tests in XML format
  [32m--test-suffix [36m<suffixes>[0m   [0m Only search for test in files with
                              specified suffix(es). Default:
                              Test.php,.phpt

[33mTest Execution Options:[0m
  [32m--dont-report-useless-tests[0m Do not report tests that do not test
                              anything
  [32m--strict-coverage          [0m Be strict about @covers annotation usage
  [32m--strict-global-state      [0m Be strict about changes to global state
  [32m--disallow-test-output     [0m Be strict about output during tests
  [32m--disallow-resource-usage  [0m Be strict about resource usage during
                              small tests
  [32m--enforce-time-limit       [0m Enforce time limit based on test size
  [32m--default-time-limit=[36m<sec>[0m [0m Timeout in seconds for tests without
                              @small, @medium or @large
  [32m--disallow-todo-tests      [0m Disallow @todo-annotated tests

  [32m--process-isolation        [0m Run each test in a separate PHP process
  [32m--globals-backup           [0m Backup and restore $GLOBALS for each test
  [32m--static-backup            [0m Backup and restore static attributes for
                              each test

  [32m--colors=[36m<flag>[0m            [0m Use colors in output ("never", "auto" or
                              "always")
  [32m--columns [36m<n>[0m              [0m Number of columns to use for progress
                              output
  [32m--columns max              [0m Use maximum number of columns for
                              progress output
  [32m--stderr                   [0m Write to STDERR instead of STDOUT
  [32m--stop-on-defect           [0m Stop execution upon first not-passed test
  [32m--stop-on-error            [0m Stop execution upon first error
  [32m--stop-on-failure          [0m Stop execution upon first error or
                              failure
  [32m--stop-on-warning          [0m Stop execution upon first warning
  [32m--stop-on-risky            [0m Stop execution upon first risky test
  [32m--stop-on-skipped          [0m Stop execution upon first skipped test
  [32m--stop-on-incomplete       [0m Stop execution upon first incomplete test
  [32m--fail-on-incomplete       [0m Treat incomplete tests as failures
  [32m--fail-on-risky            [0m Treat risky tests as failures
  [32m--fail-on-skipped          [0m Treat skipped tests as failures
  [32m--fail-on-warning          [0m Treat tests with warnings as failures
  [32m-v|--verbose               [0m Output more verbose information
  [32m--debug                    [0m Display debugging information

  [32m--repeat [36m<times>[0m           [0m Runs the test(s) repeatedly
  [32m--teamcity                 [0m Report test execution progress in
                              TeamCity format
  [32m--testdox                  [0m Report test execution progress in TestDox
                              format
  [32m--testdox-group            [0m Only include tests from the specified
                              group(s)
  [32m--testdox-exclude-group    [0m Exclude tests from the specified group(s)
  [32m--no-interaction           [0m Disable TestDox progress animation
  [32m--printer [36m<printer>[0m        [0m TestListener implementation to use

  [32m--order-by=[36m<order>[0m         [0m Run tests in order:
                              default|defects|duration|no-depends|random|reverse|size
  [32m--random-order-seed=[36m<N>[0m    [0m Use a specific random seed <N> for random
                              order
  [32m--cache-result             [0m Write test results to cache file
  [32m--do-not-cache-result      [0m Do not write test results to cache file

[33mConfiguration Options:[0m
  [32m--prepend [36m<file>[0m           [0m A PHP script that is included as early as
                              possible
  [32m--bootstrap [36m<file>[0m         [0m A PHP script that is included before the
                              tests run
  [32m-c|--configuration [36m<file>[0m  [0m Read configuration from XML file
  [32m--no-configuration         [0m Ignore default configuration file
                              (phpunit.xml)
  [32m--no-logging               [0m Ignore logging configuration
  [32m--extensions [36m<extensions>[0m  [0m A comma separated list of PHPUnit
                              extensions to load
  [32m--no-extensions            [0m Do not load PHPUnit extensions
  [32m--include-path [36m<path(s)>[0m   [0m Prepend PHP's include_path with given
                              path(s)
  [32m-d [36m<key[=value]>[0m           [0m Sets a php.ini value
  [32m--generate-configuration   [0m Generate configuration file with
                              suggested settings
  [32m--cache-result-file=[36m<file>[0m [0m Specify result cache path and filename

[33mMiscellaneous Options:[0m
  [32m-h|--help                  [0m Prints this usage information
  [32m--version                  [0m Prints the version and exits
  [32m--atleast-version [36m<min>[0m    [0m Checks that version is greater than min
                              and exits
  [32m--check-version            [0m Check whether PHPUnit is the latest
                              version

