# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - pull_request
  - push

name: CI

env:
  COMPOSER_ROOT_VERSION: "9.1-dev"

jobs:
  coding-guidelines:
    name: Coding Guidelines

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none

      - name: Run friendsofphp/php-cs-fixer
        run: ./tools/php-cs-fixer fix --diff-format=udiff --dry-run --show-progress=dots --using-cache=no --verbose

  type-checker:
    name: Type Checker

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none

      - name: Update dependencies with composer
        run: ./tools/composer update --no-interaction --no-ansi --no-progress

      - name: Run vimeo/psalm on public API
        run: ./tools/psalm --config=.psalm/static-analysis.xml --no-progress --show-info=false

      - name: Run vimeo/psalm on internal code
        run: ./tools/psalm --config=.psalm/config.xml --no-progress --shepherd --show-info=false --stats

  backward-compatibility:
    name: Backward Compatibility

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
          extensions: intl

      - name: Run roave/backward-compatibility-check
        run: ./tools/roave-backward-compatibility-check --from=9.1.0

  lint-xml-configuration:
    name: Lint XML Configuration

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Docker image
        uses: ./.docker/lint-xml-configuration

      - name: Lint XML configuration files
        uses: ./.docker/lint-xml-configuration
        with:
          args: bash ./build/scripts/lint-xml-configuration

  tests:
    name: Tests

    runs-on: ${{ matrix.os }}

    env:
      PHP_EXTENSIONS: dom, json, libxml, mbstring, pdo_sqlite, soap, xml, xmlwriter
      PHP_INI_VALUES: assert.exception=1, zend.assertions=1

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php-version:
          - "7.3"
          - "7.4"
          - "8.0"

        compiler:
          - default

        dependencies:
          - lowest
          - highest

        include:
          - os: ubuntu-latest
            php-version: "8.0"
            compiler: jit
            dependencies: highest

          - os: windows-latest
            php-version: "8.0"
            compiler: jit
            dependencies: highest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Override PHP ini values for JIT compiler
        if: matrix.compiler == 'jit'
        run: echo "::set-env name=PHP_INI_VALUES::assert.exception=1, zend.assertions=1, opcache.enable=1, opcache.enable_cli=1, opcache.optimization_level=-1, opcache.jit=1205, opcache.jit_buffer_size=4096M"

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "::set-env name=COMPOSER_CACHE_DIR::$(./tools/composer config cache-dir)"

      - name: Determine composer cache directory on Windows
        if: matrix.os == 'windows-latest'
        run: ECHO "::set-env name=COMPOSER_CACHE_DIR::~\AppData\Local\Composer"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: Install lowest dependencies with composer
        if: matrix.dependencies == 'lowest'
        run: ./tools/composer update --no-ansi --no-interaction --no-progress --prefer-lowest

      - name: Install highest dependencies with composer
        if: matrix.dependencies == 'highest'
        run: ./tools/composer update --no-ansi --no-interaction --no-progress

      - name: Run sanity check
        run: bash ./build/scripts/sanity-check

      - name: Run tests with phpunit
        run: ./phpunit --coverage-clover=coverage.xml

      - name: Send code coverage report to Codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
