<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.23.1@8471a896ccea3526b26d082f4461eeea467f10a4">
  <file src="src/Event/Dispatcher/DirectDispatcher.php">
    <UndefinedInterfaceMethod>
      <code><![CDATA[notify]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Event/Emitter/DispatchingEmitter.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($constructorArguments, $this->exportObjects)]]></code>
      <code><![CDATA[Exporter::export($value, $this->exportObjects)]]></code>
      <code><![CDATA[Exporter::export($value, $this->exportObjects)]]></code>
      <code><![CDATA[new Test\AssertionFailed(
                $this->telemetryInfo(),
                Exporter::export($value, $this->exportObjects),
                $constraint->toString($this->exportObjects),
                $constraint->count(),
                $message,
            )]]></code>
      <code><![CDATA[new Test\AssertionSucceeded(
                $this->telemetryInfo(),
                Exporter::export($value, $this->exportObjects),
                $constraint->toString($this->exportObjects),
                $constraint->count(),
                $message,
            )]]></code>
    </DeprecatedClass>
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
      <code><![CDATA[toString]]></code>
      <code><![CDATA[toString]]></code>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Event/Events/Test/Assertion/AssertionFailedSubscriber.php">
    <DeprecatedClass>
      <code><![CDATA[AssertionFailed]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Event/Events/Test/Assertion/AssertionSucceededSubscriber.php">
    <DeprecatedClass>
      <code><![CDATA[AssertionSucceeded]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Event/Events/Test/HookMethod/AfterLastTestMethodFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/HookMethod/AfterTestMethodFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/HookMethod/BeforeFirstTestMethodFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/HookMethod/BeforeTestMethodFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/HookMethod/PostConditionFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/HookMethod/PreConditionFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/Lifecycle/DataProviderMethodFinished.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$calledMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/TestDouble/MockObjectFromWsdlCreated.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$methods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Events/Test/TestDouble/PartialMockObjectCreated.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$methodNames]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Facade.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$eventClass . 'Subscriber']]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[Test\AssertionFailed::class]]></code>
      <code><![CDATA[Test\AssertionSucceeded::class]]></code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[exportObjects]]></code>
    </DeprecatedMethod>
    <InvalidArrayOffset>
      <code><![CDATA[gc_status()['running']]]></code>
    </InvalidArrayOffset>
  </file>
  <file src="src/Event/Value/Runtime/PHP.php">
    <ImpureFunctionCall>
      <code><![CDATA[get_loaded_extensions]]></code>
    </ImpureFunctionCall>
  </file>
  <file src="src/Event/Value/Telemetry/HRTime.php">
    <ImpureMethodCall>
      <code><![CDATA[fromSecondsAndNanoseconds]]></code>
      <code><![CDATA[fromSecondsAndNanoseconds]]></code>
    </ImpureMethodCall>
    <MissingThrowsDocblock>
      <code><![CDATA[Duration::fromSecondsAndNanoseconds(
            $seconds,
            $nanoseconds,
        )]]></code>
      <code><![CDATA[Duration::fromSecondsAndNanoseconds(0, 0)]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Event/Value/Telemetry/MemoryUsage.php">
    <ImpureMethodCall>
      <code><![CDATA[fromBytes]]></code>
    </ImpureMethodCall>
  </file>
  <file src="src/Event/Value/Telemetry/Php83GarbageCollectorStatusProvider.php">
    <InvalidArrayOffset>
      <code><![CDATA[$status['application_time']]]></code>
      <code><![CDATA[$status['buffer_size']]]></code>
      <code><![CDATA[$status['collector_time']]]></code>
      <code><![CDATA[$status['destructor_time']]]></code>
      <code><![CDATA[$status['free_time']]]></code>
      <code><![CDATA[$status['full']]]></code>
      <code><![CDATA[$status['protected']]]></code>
      <code><![CDATA[$status['running']]]></code>
    </InvalidArrayOffset>
  </file>
  <file src="src/Event/Value/Test/TestCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$tests]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Value/Test/TestData/TestDataCollection.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$data]]></code>
    </ArgumentTypeCoercion>
    <PropertyTypeCoercion>
      <code><![CDATA[$data]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Event/Value/Test/TestMethod.php">
    <ImpureMethodCall>
      <code><![CDATA[dataFromDataProvider]]></code>
      <code><![CDATA[dataFromDataProvider]]></code>
      <code><![CDATA[hasDataFromDataProvider]]></code>
      <code><![CDATA[hasDataFromDataProvider]]></code>
    </ImpureMethodCall>
    <MissingThrowsDocblock>
      <code><![CDATA[dataFromDataProvider]]></code>
      <code><![CDATA[dataFromDataProvider]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Event/Value/Test/TestMethodBuilder.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($testCase->dependencyInput(), EventFacade::emitter()->exportsObjects())]]></code>
      <code><![CDATA[Exporter::export($testCase->providedData(), EventFacade::emitter()->exportsObjects())]]></code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[exportsObjects]]></code>
      <code><![CDATA[exportsObjects]]></code>
    </DeprecatedMethod>
  </file>
  <file src="src/Event/Value/TestSuite/TestSuiteBuilder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$methodName]]></code>
      <code><![CDATA[$testSuite->name()]]></code>
      <code><![CDATA[$testSuite->name()]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Framework/Assert.php">
    <DeprecatedMethod>
      <code><![CDATA[testAssertionFailed]]></code>
      <code><![CDATA[testAssertionSucceeded]]></code>
    </DeprecatedMethod>
  </file>
  <file src="src/Framework/Assert/Functions.php">
    <DeprecatedMethod>
      <code><![CDATA[Assert::assertStringNotMatchesFormat(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertStringNotMatchesFormatFile(...func_get_args())]]></code>
    </DeprecatedMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[Assert::containsOnly(...func_get_args())]]></code>
      <code><![CDATA[Assert::containsOnlyInstancesOf(...func_get_args())]]></code>
      <code><![CDATA[Assert::isInstanceOf(...func_get_args())]]></code>
      <code><![CDATA[Assert::isType(...func_get_args())]]></code>
      <code><![CDATA[Assert::logicalAnd(...func_get_args())]]></code>
      <code><![CDATA[Assert::stringEndsWith(...func_get_args())]]></code>
      <code><![CDATA[Assert::stringStartsWith(...func_get_args())]]></code>
    </MissingThrowsDocblock>
    <TooManyArguments>
      <code><![CDATA[Assert::anything(...func_get_args())]]></code>
      <code><![CDATA[Assert::directoryExists(...func_get_args())]]></code>
      <code><![CDATA[Assert::fileExists(...func_get_args())]]></code>
      <code><![CDATA[Assert::isEmpty(...func_get_args())]]></code>
      <code><![CDATA[Assert::isFalse(...func_get_args())]]></code>
      <code><![CDATA[Assert::isFinite(...func_get_args())]]></code>
      <code><![CDATA[Assert::isInfinite(...func_get_args())]]></code>
      <code><![CDATA[Assert::isJson(...func_get_args())]]></code>
      <code><![CDATA[Assert::isList(...func_get_args())]]></code>
      <code><![CDATA[Assert::isNan(...func_get_args())]]></code>
      <code><![CDATA[Assert::isNull(...func_get_args())]]></code>
      <code><![CDATA[Assert::isReadable(...func_get_args())]]></code>
      <code><![CDATA[Assert::isTrue(...func_get_args())]]></code>
      <code><![CDATA[Assert::isWritable(...func_get_args())]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Cardinality/Count.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Framework/Constraint/Cardinality/GreaterThan.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Cardinality/IsEmpty.php">
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Cardinality/LessThan.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Constraint.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($other, true)]]></code>
      <code><![CDATA[Exporter::export($other, true)]]></code>
    </DeprecatedClass>
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqual.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqualCanonicalizing.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqualIgnoringCase.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqualWithDelta.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Exception/ExceptionCode.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($other, true)]]></code>
      <code><![CDATA[Exporter::export($this->expectedCode, true)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Exception/ExceptionMessageIsOrContains.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->expectedMessage)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Exception/ExceptionMessageMatchesRegularExpression.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->regularExpression]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->regularExpression)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/IsIdentical.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($other, true)]]></code>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
      <code><![CDATA[Exporter::export($this->value, true)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Object/ObjectEquals.php">
    <MissingThrowsDocblock>
      <code><![CDATA[getMethod]]></code>
    </MissingThrowsDocblock>
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Object/ObjectHasProperty.php">
    <MissingThrowsDocblock>
      <code><![CDATA[hasProperty]]></code>
    </MissingThrowsDocblock>
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Operator/BinaryOperator.php">
    <PropertyTypeCoercion>
      <code><![CDATA[array_map(
            fn ($constraint): Constraint => $this->checkConstraint($constraint),
            $constraints,
        )]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Framework/Constraint/Operator/LogicalXor.php">
    <InvalidArgument>
      <code><![CDATA[bool]]></code>
    </InvalidArgument>
  </file>
  <file src="src/Framework/Constraint/String/RegularExpression.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->pattern]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Framework/Constraint/String/StringContains.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($other, true)]]></code>
    </DeprecatedClass>
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/String/StringMatchesFormatDescription.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$line]]></code>
      <code><![CDATA[$this->regularExpressionForFormatDescription(
                $this->convertNewlines($this->formatDescription),
            )]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Framework/Constraint/Traversable/ArrayHasKey.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->key)]]></code>
    </DeprecatedClass>
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Traversable/IsList.php">
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Traversable/TraversableContains.php">
    <DeprecatedClass>
      <code><![CDATA[Exporter::export($this->value, $exportObjects)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Framework/Constraint/Traversable/TraversableContainsOnly.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$type]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Framework/Constraint/Type/IsInstanceOf.php">
    <TooManyArguments>
      <code><![CDATA[toString]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/DataProviderTestSuite.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$methodName]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->providedTests]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<ExecutionOrderDependency>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Framework/ExecutionOrderDependency.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($methodName)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Framework/MockObject/Generator/Generator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$methods]]></code>
      <code><![CDATA[$type]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[new MockTrait(
                $classTemplate->render(),
                $className['className'],
            )]]></code>
      <code><![CDATA[new MockTrait($classTemplate->render(), $className['className'])]]></code>
      <code><![CDATA[new UnknownTraitException($traitName)]]></code>
      <code><![CDATA[new UnknownTraitException($traitName)]]></code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[mockObjectForAbstractClass]]></code>
    </DeprecatedMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[getMethod]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
      <code><![CDATA[testDouble]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$client->__getFunctions()]]></code>
    </PossiblyNullArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$parameterStart]]></code>
      <code><![CDATA[empty($methods)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Framework/MockObject/Generator/MockClass.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->mockName]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[class-string]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Framework/MockObject/Generator/MockMethod.php">
    <InvalidArgument>
      <code><![CDATA[[
                'arguments_decl'     => $this->argumentsForDeclaration,
                'arguments_call'     => $this->argumentsForCall,
                'return_declaration' => !empty($this->returnType->asString()) ? (': ' . $this->returnType->asString()) : '',
                'return_type'        => $this->returnType->asString(),
                'arguments_count'    => !empty($this->argumentsForCall) ? substr_count($this->argumentsForCall, ',') + 1 : 0,
                'class_name'         => $this->className,
                'method_name'        => $this->methodName,
                'modifier'           => $this->modifier,
                'reference'          => $this->reference,
                'clone_arguments'    => $this->cloneArguments ? 'true' : 'false',
                'deprecation'        => $deprecation,
                'return_result'      => $returnResult,
            ]]]></code>
    </InvalidArgument>
    <PossiblyFalseOperand>
      <code><![CDATA[strpos($parameterAsString, '<optional> ')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="src/Framework/MockObject/Generator/MockTrait.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->mockName]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[class-string]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Framework/MockObject/MockBuilder.php">
    <DeprecatedMethod>
      <code><![CDATA[mockObjectForAbstractClass]]></code>
      <code><![CDATA[mockObjectForTrait]]></code>
    </DeprecatedMethod>
    <InvalidReturnStatement>
      <code><![CDATA[$object]]></code>
      <code><![CDATA[$object]]></code>
      <code><![CDATA[$object]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[MockObject&MockedType]]></code>
      <code><![CDATA[MockObject&MockedType]]></code>
      <code><![CDATA[MockObject&MockedType]]></code>
    </InvalidReturnType>
  </file>
  <file src="src/Framework/MockObject/Runtime/Builder/InvocationMocker.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$configurableMethods]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Framework/MockObject/Runtime/Matcher.php">
    <InvalidNullableReturnType>
      <code><![CDATA[MethodName]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->methodNameRule]]></code>
    </NullableReturnStatement>
  </file>
  <file src="src/Framework/MockObject/Runtime/ReturnValueGenerator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$returnType]]></code>
      <code><![CDATA[$types]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[(new ReflectionClass($stubClassName))->newInstanceWithoutConstructor()]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[Stub]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Framework/MockObject/Runtime/Rule/Parameters.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$parameterVerificationResult]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Framework/TestCase.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$e->getMessage()]]></code>
      <code><![CDATA[$mockClassName]]></code>
      <code><![CDATA[$originalClassName]]></code>
      <code><![CDATA[$this->expectedException]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code><![CDATA[disableArgumentCloning]]></code>
      <code><![CDATA[disallowMockingUnknownTypes]]></code>
      <code><![CDATA[enableProxyingToOriginalMethods]]></code>
      <code><![CDATA[generateClassFromWsdl]]></code>
      <code><![CDATA[mockObjectForAbstractClass]]></code>
      <code><![CDATA[mockObjectForTrait]]></code>
      <code><![CDATA[objectForTrait]]></code>
      <code><![CDATA[registerMockObjectsFromTestArguments]]></code>
      <code><![CDATA[registerMockObjectsFromTestArguments]]></code>
    </DeprecatedMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[getMethod]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$outputBufferingLevel]]></code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code><![CDATA[$backupGlobalsExcludeList]]></code>
      <code><![CDATA[$groups]]></code>
    </PropertyTypeCoercion>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$context->contains($testArgument)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Framework/TestRunner.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$cce->getMessage()]]></code>
      <code><![CDATA[$test->output()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code><![CDATA[exportsObjects]]></code>
      <code><![CDATA[registerMockObjectsFromTestArgumentsRecursively]]></code>
      <code><![CDATA[registerMockObjectsFromTestArgumentsRecursively]]></code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code><![CDATA[$var]]></code>
    </InvalidArgument>
    <MissingThrowsDocblock>
      <code><![CDATA[bootstrap]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/TestSuite.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->name]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Logging/JUnit/JunitXmlLogger.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->testSuiteTimes]]></code>
    </InvalidPropertyAssignmentValue>
    <MissingThrowsDocblock>
      <code><![CDATA[dataFromDataProvider]]></code>
    </MissingThrowsDocblock>
    <RedundantCondition>
      <code><![CDATA[assert($test instanceof TestMethod)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Logging/TeamCity/TeamCityLogger.php">
    <MissingThrowsDocblock>
      <code><![CDATA[comparisonFailure]]></code>
      <code><![CDATA[comparisonFailure]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$flowId]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[assert($test instanceof TestMethod)]]></code>
      <code><![CDATA[assert($testSuite instanceof TestSuiteForTestClass)]]></code>
      <code><![CDATA[assert($testSuite instanceof TestSuiteForTestMethodWithDataProvider)]]></code>
      <code><![CDATA[assert($testSuite instanceof TestSuiteForTestMethodWithDataProvider)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Logging/TestDox/NamePrettifier.php">
    <InvalidCast>
      <code><![CDATA[$value]]></code>
    </InvalidCast>
  </file>
  <file src="src/Logging/TestDox/TestResult/TestResultCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$testResults]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Logging/TestDox/TestResult/TestResultCollector.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->status]]></code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code><![CDATA[assert($test instanceof TestMethod)]]></code>
      <code><![CDATA[assert($test instanceof TestMethod)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Metadata/Api/CodeCoverage.php">
    <RedundantCondition>
      <code><![CDATA[$metadata instanceof Covers]]></code>
      <code><![CDATA[$metadata instanceof Uses]]></code>
      <code><![CDATA[$metadata->isCovers()]]></code>
      <code><![CDATA[$metadata->isUses()]]></code>
      <code><![CDATA[assert($metadata instanceof Covers)]]></code>
      <code><![CDATA[assert($metadata instanceof Uses)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Metadata/Api/DataProvider.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
    <RedundantCast>
      <code><![CDATA[(int) $matches[0][1]]]></code>
    </RedundantCast>
  </file>
  <file src="src/Metadata/Api/Dependencies.php">
    <RedundantCondition>
      <code><![CDATA[assert($metadata instanceof DependsOnClass)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Metadata/Api/Groups.php">
    <RedundantCondition>
      <code><![CDATA[$metadata instanceof CoversFunction]]></code>
      <code><![CDATA[$metadata instanceof UsesFunction]]></code>
      <code><![CDATA[assert($metadata instanceof Covers)]]></code>
      <code><![CDATA[assert($metadata instanceof Uses)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Metadata/Api/Requirements.php">
    <RedundantCondition>
      <code><![CDATA[assert($metadata instanceof RequiresFunction)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresMethod)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresOperatingSystem)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresOperatingSystemFamily)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresPhp)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresPhpExtension)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresPhpunit)]]></code>
      <code><![CDATA[assert($metadata instanceof RequiresSetting)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Metadata/Metadata.php">
    <DeprecatedClass>
      <code><![CDATA[IgnoreClassForCodeCoverage]]></code>
      <code><![CDATA[IgnoreFunctionForCodeCoverage]]></code>
      <code><![CDATA[IgnoreMethodForCodeCoverage]]></code>
      <code><![CDATA[new IgnoreClassForCodeCoverage(self::CLASS_LEVEL, $className)]]></code>
      <code><![CDATA[new IgnoreFunctionForCodeCoverage(self::CLASS_LEVEL, $functionName)]]></code>
      <code><![CDATA[new IgnoreMethodForCodeCoverage(self::CLASS_LEVEL, $className, $methodName)]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Metadata/MetadataCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$metadata]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Metadata/Parser/Annotation/DocBlock.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[array_merge(
            $requires,
            ['__OFFSET' => $recordedOffsets],
            array_filter(
                [
                    'setting'            => $recordedSettings,
                    'extension_versions' => $extensionVersions,
                ],
            ),
        )]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code><![CDATA[$this->parsedRequirements = array_merge(
            $requires,
            ['__OFFSET' => $recordedOffsets],
            array_filter(
                [
                    'setting'            => $recordedSettings,
                    'extension_versions' => $extensionVersions,
                ],
            ),
        )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{
     *   __OFFSET: array<string, int>&array{__FILE: string},
     *   setting?: array<string, string>,
     *   extension_versions?: array<string, array{version: string, operator: string}>
     * }&array<
     *   string,
     *   string|array{version: string, operator: string}|array{constraint: string}|array<int|string, string>
     * >]]></code>
    </InvalidReturnType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[preg_match_all('/@(?P<name>[A-Za-z_-]+)(?:[ \t]+(?P<value>.*?))?[ \t]*\r?$/m', $docBlock, $matches)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Metadata/Parser/AnnotationParser.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$_className]]></code>
      <code><![CDATA[$_className]]></code>
      <code><![CDATA[$function]]></code>
      <code><![CDATA[$function]]></code>
      <code><![CDATA[$pieces[0]]]></code>
      <code><![CDATA[$pieces[0]]]></code>
      <code><![CDATA[$pieces[1]]]></code>
      <code><![CDATA[$pieces[1]]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[explode('::', $value)]]></code>
      <code><![CDATA[explode('::', $value)]]></code>
      <code><![CDATA[trim($tmp[0])]]></code>
      <code><![CDATA[trim($tmp[1])]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Metadata/Parser/AttributeParser.php">
    <DeprecatedClass>
      <code><![CDATA[IgnoreClassForCodeCoverage::class]]></code>
      <code><![CDATA[IgnoreFunctionForCodeCoverage::class]]></code>
      <code><![CDATA[IgnoreMethodForCodeCoverage::class]]></code>
    </DeprecatedClass>
  </file>
  <file src="src/Metadata/Version/Requirement.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[!empty($matches['operator']) ? $matches['operator'] : '>=']]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Runner/Baseline/RelativePathCalculator.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[array_merge(array_fill(0, $dotsCount, '..'), array_slice($filenameParts, $i))]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<non-empty-string>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Runner/CodeCoverage.php">
    <InvalidNullableReturnType>
      <code><![CDATA[Driver]]></code>
      <code><![CDATA[\SebastianBergmann\CodeCoverage\CodeCoverage]]></code>
    </InvalidNullableReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[codeCoverageGenerationFailed]]></code>
      <code><![CDATA[codeCoverageGenerationFailed]]></code>
      <code><![CDATA[codeCoverageGenerationFailed]]></code>
      <code><![CDATA[codeCoverageGenerationFailed]]></code>
      <code><![CDATA[codeCoverageGenerationFailed]]></code>
      <code><![CDATA[codeCoverageGenerationFailed]]></code>
      <code><![CDATA[codeCoverageGenerationSucceeded]]></code>
      <code><![CDATA[codeCoverageGenerationSucceeded]]></code>
      <code><![CDATA[codeCoverageGenerationSucceeded]]></code>
      <code><![CDATA[codeCoverageGenerationSucceeded]]></code>
      <code><![CDATA[codeCoverageGenerationSucceeded]]></code>
      <code><![CDATA[codeCoverageGenerationSucceeded]]></code>
      <code><![CDATA[coverageCacheDirectory]]></code>
      <code><![CDATA[coverageClover]]></code>
      <code><![CDATA[coverageCobertura]]></code>
      <code><![CDATA[coverageCrap4j]]></code>
      <code><![CDATA[coverageHtml]]></code>
      <code><![CDATA[coverageHtmlCustomCssFile]]></code>
      <code><![CDATA[coveragePhp]]></code>
      <code><![CDATA[coverageText]]></code>
      <code><![CDATA[coverageText]]></code>
      <code><![CDATA[coverageXml]]></code>
    </MissingThrowsDocblock>
    <NullableReturnStatement>
      <code><![CDATA[$this->codeCoverage]]></code>
      <code><![CDATA[$this->driver]]></code>
    </NullableReturnStatement>
    <PossiblyNullReference>
      <code><![CDATA[start]]></code>
      <code><![CDATA[stop]]></code>
    </PossiblyNullReference>
  </file>
  <file src="src/Runner/ErrorHandler.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorFile]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorLine]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
      <code><![CDATA[$errorString]]></code>
    </ArgumentTypeCoercion>
    <MissingThrowsDocblock>
      <code><![CDATA[Issue::from($file, $line, null, $description)]]></code>
      <code><![CDATA[Issue::from($file, $line, null, $description)]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Runner/Filter/GroupFilterIterator.php">
    <MissingTemplateParam>
      <code><![CDATA[GroupFilterIterator]]></code>
    </MissingTemplateParam>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->groupTests]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Runner/Filter/NameFilterIterator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$filter]]></code>
      <code><![CDATA[$this->filter]]></code>
    </ArgumentTypeCoercion>
    <MissingTemplateParam>
      <code><![CDATA[NameFilterIterator]]></code>
    </MissingTemplateParam>
    <PossiblyNullArgument>
      <code><![CDATA[$this->filter]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Runner/Filter/TestIdFilterIterator.php">
    <MissingTemplateParam>
      <code><![CDATA[TestIdFilterIterator]]></code>
    </MissingTemplateParam>
  </file>
  <file src="src/Runner/PhptTestCase.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$message]]></code>
    </ArgumentTypeCoercion>
    <InternalClass>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
    </InternalMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[bootstrap]]></code>
    </MissingThrowsDocblock>
    <PossiblyInvalidArgument>
      <code><![CDATA[$sections['FILEEOF']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$setting[1]]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/Runner/TestResult/Collector.php">
    <RedundantCondition>
      <code><![CDATA[assert($testSuite instanceof TestSuiteForTestMethodWithDataProvider)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Runner/TestSuiteLoader.php">
    <UnresolvableInclude>
      <code><![CDATA[require_once $suiteClassFile]]></code>
    </UnresolvableInclude>
  </file>
  <file src="src/Runner/TestSuiteSorter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$tests]]></code>
      <code><![CDATA[$this->randomize($suite->tests())]]></code>
      <code><![CDATA[$this->resolveDependencies($tests)]]></code>
      <code><![CDATA[$this->reverse($suite->tests())]]></code>
      <code><![CDATA[$this->sortByDuration($suite->tests())]]></code>
      <code><![CDATA[$this->sortBySize($suite->tests())]]></code>
      <code><![CDATA[$this->sortDefectsFirst($suite->tests())]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/TextUI/Application.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$configuration->generateBaseline()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code><![CDATA[exportObjects]]></code>
      <code><![CDATA[exportObjects]]></code>
      <code><![CDATA[requiresExportOfObjects]]></code>
    </DeprecatedMethod>
    <InternalMethod>
      <code><![CDATA[nameAndVersion]]></code>
    </InternalMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[DefaultPrinter::from(
                    $configuration->logfileTeamcity(),
                )]]></code>
      <code><![CDATA[DefaultPrinter::from(
                    $configuration->logfileTeamcity(),
                )]]></code>
      <code><![CDATA[OutputFacade::printerFor($configuration->logfileJunit())]]></code>
      <code><![CDATA[OutputFacade::printerFor($configuration->logfileJunit())]]></code>
      <code><![CDATA[atLeastVersion]]></code>
      <code><![CDATA[build]]></code>
      <code><![CDATA[configurationFile]]></code>
      <code><![CDATA[listTestsXml]]></code>
      <code><![CDATA[logEventsText]]></code>
      <code><![CDATA[logEventsText]]></code>
      <code><![CDATA[logEventsText]]></code>
      <code><![CDATA[logEventsVerboseText]]></code>
      <code><![CDATA[logEventsVerboseText]]></code>
      <code><![CDATA[logEventsVerboseText]]></code>
      <code><![CDATA[logfileJunit]]></code>
      <code><![CDATA[logfileTeamcity]]></code>
    </MissingThrowsDocblock>
    <UnresolvableInclude>
      <code><![CDATA[include_once $filename]]></code>
    </UnresolvableInclude>
  </file>
  <file src="src/TextUI/Configuration/Builder.php">
    <MissingThrowsDocblock>
      <code><![CDATA[Registry::init(
                $cliConfiguration,
                $xmlConfiguration,
            )]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/TextUI/Configuration/Cli/Builder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$options[1]]]></code>
      <code><![CDATA[$parameters]]></code>
      <code><![CDATA[$testSuffixes]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Cli/Configuration.php">
    <DeprecatedMethod>
      <code><![CDATA[hasCacheResultFile]]></code>
      <code><![CDATA[hasCoverageCacheDirectory]]></code>
    </DeprecatedMethod>
    <InvalidNullableReturnType>
      <code><![CDATA[bool]]></code>
      <code><![CDATA[string]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->excludeTestSuite]]></code>
      <code><![CDATA[$this->teamCityPrinter]]></code>
    </NullableReturnStatement>
  </file>
  <file src="src/TextUI/Configuration/Cli/XmlConfigurationFileFinder.php">
    <MissingThrowsDocblock>
      <code><![CDATA[configurationFile]]></code>
      <code><![CDATA[configurationFile]]></code>
      <code><![CDATA[configurationFile]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/TextUI/Configuration/Configuration.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->testsCovering]]></code>
      <code><![CDATA[$this->testsUsing]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<string>]]></code>
      <code><![CDATA[list<string>]]></code>
    </MoreSpecificReturnType>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$columns]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($this->excludeGroups)]]></code>
      <code><![CDATA[empty($this->groups)]]></code>
      <code><![CDATA[empty($this->testsCovering)]]></code>
      <code><![CDATA[empty($this->testsUsing)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/Configuration/Merger.php">
    <DeprecatedMethod>
      <code><![CDATA[cacheDirectory]]></code>
      <code><![CDATA[cacheResultFile]]></code>
      <code><![CDATA[cacheResultFile]]></code>
      <code><![CDATA[coverageCacheDirectory]]></code>
      <code><![CDATA[coverageCacheDirectory]]></code>
      <code><![CDATA[hasCacheDirectory]]></code>
      <code><![CDATA[hasCacheResultFile]]></code>
      <code><![CDATA[hasCacheResultFile]]></code>
      <code><![CDATA[hasCoverageCacheDirectory]]></code>
      <code><![CDATA[registerMockObjectsFromTestArgumentsRecursively]]></code>
    </DeprecatedMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[baseline]]></code>
      <code><![CDATA[detect]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$_SERVER['PHP_SELF']]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$_SERVER['PHP_SELF']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCondition>
      <code><![CDATA[assert($xmlConfiguration instanceof LoadedFromFileConfiguration)]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$candidate]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/Configuration/Registry.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$result]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/Configuration/SourceMapper.php">
    <InvalidArgument>
      <code><![CDATA[$files]]></code>
      <code><![CDATA[$source]]></code>
      <code><![CDATA[$source]]></code>
      <code><![CDATA[$source]]></code>
      <code><![CDATA[$source]]></code>
    </InvalidArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[!$file]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/Configuration/TestSuiteBuilder.php">
    <MissingThrowsDocblock>
      <code><![CDATA[\PHPUnit\Event\TestSuite\TestSuiteBuilder::from($testSuite)]]></code>
    </MissingThrowsDocblock>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$argument]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/Configuration/Value/ConstantCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$constants]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/DirectoryCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$directories]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/ExtensionBootstrapCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$extensionBootstraps]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/FileCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$files]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/FilterDirectoryCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$directories]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/GroupCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$groups]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/IniSettingCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$iniSettings]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/TestDirectoryCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$directories]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/TestFileCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$files]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/TestSuiteCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$testSuites]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Value/VariableCollection.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$variables]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/TextUI/Configuration/Xml/CodeCoverage/CodeCoverage.php">
    <DeprecatedMethod>
      <code><![CDATA[hasCacheDirectory]]></code>
    </DeprecatedMethod>
  </file>
  <file src="src/TextUI/Configuration/Xml/Loader.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$bootstrap->getAttribute('class')]]></code>
      <code><![CDATA[$directoryNode->getAttribute('phpVersionOperator')]]></code>
      <code><![CDATA[$fileNode->getAttribute('phpVersionOperator')]]></code>
    </ArgumentTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[assert($directoryNode instanceof DOMElement)]]></code>
      <code><![CDATA[assert($fileNode instanceof DOMElement)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/TextUI/Configuration/Xml/Migration/Migrations/LogToReportMigration.php">
    <PossiblyNullReference>
      <code><![CDATA[removeChild]]></code>
    </PossiblyNullReference>
  </file>
  <file src="src/TextUI/Configuration/Xml/Migration/Migrations/MoveCoverageDirectoriesToSource.php">
    <InvalidArgument>
      <code><![CDATA[$xpath->query('//coverage/' . $element)]]></code>
    </InvalidArgument>
  </file>
  <file src="src/TextUI/Configuration/Xml/Migration/Migrations/RemoveEmptyFilter.php">
    <PossiblyNullReference>
      <code><![CDATA[removeChild]]></code>
      <code><![CDATA[removeChild]]></code>
    </PossiblyNullReference>
  </file>
  <file src="src/TextUI/Configuration/Xml/PHPUnit.php">
    <DeprecatedMethod>
      <code><![CDATA[hasCacheResultFile]]></code>
    </DeprecatedMethod>
  </file>
  <file src="src/TextUI/Configuration/Xml/SchemaFinder.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$result]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[non-empty-list<non-empty-string>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/TextUI/Help.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$option['desc']]]></code>
      <code><![CDATA[$option['desc']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/TextUI/Output/Default/ResultPrinter.php">
    <MissingThrowsDocblock>
      <code><![CDATA[dataFromDataProvider]]></code>
    </MissingThrowsDocblock>
    <RedundantCondition>
      <code><![CDATA[assert($test instanceof TestMethod)]]></code>
      <code><![CDATA[assert($test instanceof TestMethod)]]></code>
    </RedundantCondition>
  </file>
  <file src="src/TextUI/Output/Facade.php">
    <InvalidNullableReturnType>
      <code><![CDATA[Printer]]></code>
    </InvalidNullableReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[DefaultPrinter::standardError()]]></code>
      <code><![CDATA[DefaultPrinter::standardError()]]></code>
      <code><![CDATA[DefaultPrinter::standardOutput()]]></code>
      <code><![CDATA[DefaultPrinter::standardOutput()]]></code>
      <code><![CDATA[DefaultPrinter::standardOutput()]]></code>
      <code><![CDATA[DefaultPrinter::standardOutput()]]></code>
      <code><![CDATA[new DefaultProgressPrinter(
            self::$printer,
            EventFacade::instance(),
            $configuration->colors(),
            $configuration->columns(),
            $configuration->source(),
        )]]></code>
      <code><![CDATA[new DefaultProgressPrinter(
            self::$printer,
            EventFacade::instance(),
            $configuration->colors(),
            $configuration->columns(),
            $configuration->source(),
        )]]></code>
    </MissingThrowsDocblock>
    <NullableReturnStatement>
      <code><![CDATA[self::$printer]]></code>
    </NullableReturnStatement>
  </file>
  <file src="src/TextUI/Output/Printer/DefaultPrinter.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->stream]]></code>
      <code><![CDATA[$this->stream]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/TextUI/TestSuiteFilterProcessor.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$configuration->excludeGroups()]]></code>
      <code><![CDATA[$configuration->filter()]]></code>
      <code><![CDATA[$configuration->groups()]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Util/ExcludeList.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[self::$directories]]></code>
      <code><![CDATA[self::$directories]]></code>
      <code><![CDATA[self::$directories]]></code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="src/Util/PHP/AbstractPhpProcess.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[$file]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/PHP/DefaultPhpProcess.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($envVar)]]></code>
    </DocblockTypeContradiction>
    <RedundantCondition>
      <code><![CDATA[$_SERVER]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!($this->tempFile = tempnam(sys_get_temp_dir(), 'phpunit_'))]]></code>
      <code><![CDATA[$this->tempFile]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainNull>
      <code><![CDATA[[]]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Util/Reflection.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$filter]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Util/VersionComparisonOperator.php">
    <DocblockTypeContradiction>
      <code><![CDATA[in_array($operator, ['<', 'lt', '<=', 'le', '>', 'gt', '>=', 'ge', '==', '=', 'eq', '!=', '<>', 'ne'], true)]]></code>
    </DocblockTypeContradiction>
    <NoValue>
      <code><![CDATA[$operator]]></code>
    </NoValue>
  </file>
</files>
